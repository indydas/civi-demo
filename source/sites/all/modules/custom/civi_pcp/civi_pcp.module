<?php

/**
 * @file
 * Author Indrajit Das
 * civi_pcp core module for the Civi personal campaign page.
 */

/**
 * Implements hook_install().
 */
function civi_pcp_install() {
  db_set_active('civicrm');
  // Insert into the civirm_navigation table.
  db_insert('civicrm_navigation')
    ->fields(array(
	  'domain_id' => 1,
	  'label' => 'Edit PCP page type',
	  'name' => 'Edit PCP page type',
	  'url' => 'civicrm/edit-pcp?reset=1',
	  'permission' => 'administer CiviCRM',
	  'permission_operator' => '',
	  'parent_id' => NULL,
	  'is_active' => 1,
	  'has_separator' => 0,
	  'weight' => 10,
    ))
    ->execute();
  db_set_active();
  drupal_flush_all_caches();
}

/**
 * Implements hook_menu().
 */
function civi_pcp_menu() {
  $items = array();

  $items['civicrm/edit-pcp?reset=1'] = array(
    'title' => 'Edit PCP page type',
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('civi_pcp_form'), //put the name of the form here
    'access callback' => TRUE,
    'access arguments' => array('administer CiviCRM'),
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function civi_pcp_theme($existing, $type, $theme, $path) {
  return array (
    'civi_pcp_form' => array(
	  'arguments' => array('form' => NULL),
      'template' => 'civi_pcp_form',
      'render element' => 'form',
    ),
  );
}

/**
 * Implements hook_form().
 * Custom function to edit PCP to contribution or event types.
 */
function civi_pcp_form($node, &$form_state) {

  $form = array();
  
  $form['title'] = array(
    '#type' => 'select',
    '#title' => t('Title'),
    '#options' => array(
      1 => 'Event one',
      2 => 'Event two',
    ),
    '#description' => t('Choose an option.'),
  );
	
  $form['pcp_type'] = array(
    '#type' => 'select',
    '#title' => t('Contribution or event?'),
    '#options' => array(
      1 => 'Contribution',
      2 => 'Event',
    ),
    '#description' => t('Choose an option.'),
  );
  
  $form['buttons']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
    '#submit' => array('civi_pcp_form_submit'),
  );
	
  return $form;
  
}

/**
 * Implements hook_form_submit().
 */
function civi_pcp_form_submit($form, $form_state) {

  // Set value to DB.
  if ($form_state['values']['pcp_type'] == '1') {
  	$pcp_type = 'contribute';
  }
  else {
  	$pcp_type = 'event';
  }
  db_set_active('civicrm');
  db_update('civicrm_pcp')
  ->fields(array(
    'page_type' => $pcp_type,
  ))
  ->condition('id', $form_state['values']['title'], '=')
  ->execute();
  db_set_active();
  drupal_set_message("Successfully changed page type to " . $pcp_type);
}

/**
 * Implements hook_form_alter().
 * @param unknown $form
 * @param unknown $form_state
 * @param unknown $form_id
 */
function civi_pcp_form_alter(&$form, &$form_state, $form_id) {
  // Only trigger on webform created.
  if ($form['#node']->uuid == 'c2bde896-cc95-45c3-8f69-2b0c3144e9cf') {
  	$form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_email_email']['#access'] = FALSE;
  	db_set_active('civicrm');
  	$form['submitted']['contribution_page_type']['#options'] = db_query('SELECT id, title FROM {civicrm_contribution_page}')->fetchAllKeyed();
  	$form['submitted']['contribution_event_type']['#options'] = db_query('SELECT id, title FROM {civicrm_event}')->fetchAllKeyed();
  	db_set_active();
  }
  // If new admin form page create a dropdown.
  if ($form_id == 'civi_pcp_form') {
  	db_set_active('civicrm');
  	$form['title']['#options'] = db_query("SELECT id, title FROM {civicrm_pcp}")->fetchAllKeyed();
  	db_set_active();
  } 
}

/**
 * Respond to a Webform submission being inserted.
 *
 * Note that this hook is called after a submission has already been saved to
 * the database. If needing to modify the submission prior to insertion, use
 * hook_webform_submission_presave().
 *
 * @param $node
 *   The Webform node on which this submission was made.
 * @param $submission
 *   The Webform submission that was just inserted into the database.
 */
function civi_pcp_webform_submission_insert($node, $submission) {
  
  // Only based for on specific webform.
  if ($node->uuid == 'c2bde896-cc95-45c3-8f69-2b0c3144e9cf') {

    // API for create campaign lacks functionality for re-writing directly into civicrm_pcp table 
    // so use a db_insert instead.
    db_set_active('civicrm');
    
    // Check value entered so page type can be set accordingly.
    if ($submission->data['19']['0'] == '1') {
      $page_type = 'contribute';
    }
    else {
      $page_type = 'event';
    }
    
    // Check page type so page_id can be set accordingly.
    if ($submission->data['19']['0'] == '1') {
      $pcp_id = $submission->data['18']['0'];
    }
    else {
      $pcp_id = $submission->data['20']['0'];
    }
	
    //db_insert into civicrm_pcp table every new personal campaign.
    db_insert('civicrm_pcp')
      ->fields(array(
        'contact_id' => 2,
        'status_id' => 1,
        'title' => $submission->data['7']['0'],
        'intro_text' => $submission->data['8']['0'],
        'page_text' => $submission->data['14']['0'],
        'donate_link_text' => $submission->data['13']['0'],
        'page_id' => $pcp_id, // page_id of contribution page
        'page_type' => $page_type,
        'pcp_block_id' => $pcp_id,
        'is_thermometer' => 1,
        'is_honor_roll' => 1,
        'goal_amount' => $submission->data['10']['0'],
        'currency' => 1,
        'is_active' => 1,
        'is_notify' => 1
    ))
    ->execute();
  
    // Go back to the default database,
    // otherwise Drupal will not be able to access its own data later on.
    db_set_active();
  
    $params = array(
      'first_name' => $submission->data['4']['0'],
  	  'contact_type' => 'Individual',
  	  'last_name' => $submission->data['5']['0'],
  	  'legal_name' => '',
    );
  
    try {
  	  $result = civicrm_api3('Contact', 'create', $params);
    }
    catch (CiviCRM_API3_Exception $e) {
  	    // Handle error here.
  	    $errorMessage = $e->getMessage();
  	    $errorCode = $e->getErrorCode();
  	    $errorData = $e->getExtraParams();
  	    return array(
  	      'error' => $errorMessage,
  	      'error_code' => $errorCode,
  	      'error_data' => $errorData,
  	    );
    }

    return $result;
  }
  
}

/**
 * Implements hook_uninstall().
 */
function civi_pcp_uninstall() {
  db_set_active('civicrm');
  // Delete from the civirm_navigation table.
  db_delete('civicrm_navigation')
    ->condition('name', 'Edit PCP page type')
    ->execute();
  db_set_active();
  drupal_flush_all_caches();
}