<?php

/**
 * @file
 * Author Indrajit Das
 * civi_pcp core module for the Civi personal campaign page.
 */

/**
 * Implements hook_form_alter().
 * @param unknown $form
 * @param unknown $form_state
 * @param unknown $form_id
 */
function civi_pcp_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#node']->uuid == 'c2bde896-cc95-45c3-8f69-2b0c3144e9cf') {
  	$form['submitted']['civicrm_1_contact_1_fieldset_fieldset']['civicrm_1_contact_1_email_email']['#access'] = FALSE;
  }
}

/**
 * Respond to a Webform submission being inserted.
 *
 * Note that this hook is called after a submission has already been saved to
 * the database. If needing to modify the submission prior to insertion, use
 * hook_webform_submission_presave().
 *
 * @param $node
 *   The Webform node on which this submission was made.
 * @param $submission
 *   The Webform submission that was just inserted into the database.
 */
function civi_pcp_webform_submission_insert($node, $submission) {
  
  // Only based for on specific webform.
  if ($node->uuid == 'c2bde896-cc95-45c3-8f69-2b0c3144e9cf') {

    // API for create campaign lacks functionality for re-writing directly into civicrm_pcp table 
    // so use a db_insert instead.
    db_set_active('civicrm');
	
    //db_insert into civicrm_pcp table every new personal campaign.
    db_insert('civicrm_pcp')
      ->fields(array(
        'contact_id' => 2,
        'status_id' => 1,
        'title' => $submission->data['7']['0'],
        'intro_text' => $submission->data['8']['0'],
        'page_text' => $submission->data['14']['0'],
        'donate_link_text' => $submission->data['13']['0'],
        'page_id' => $submission->data['17']['0'], // page_id of contribution page
        'page_type' => 'contribute',
        'pcp_block_id' => $submission->data['17']['0'],
        'is_thermometer' => 1,
        'is_honor_roll' => 1,
        'goal_amount' => $submission->data['10']['0'],
        'currency' => 1,
        'is_active' => 1,
        'is_notify' => 1
    ))
    ->execute();
  
    // Go back to the default database,
    // otherwise Drupal will not be able to access its own data later on.
    db_set_active();
  
    $params = array(
      'first_name' => $submission->data['4']['0'],
  	  'contact_type' => 'Individual',
  	  'last_name' => $submission->data['5']['0'],
  	  'legal_name' => '',
    );
  
    try {
  	  $result = civicrm_api3('Contact', 'create', $params);
    }
    catch (CiviCRM_API3_Exception $e) {
  	    // Handle error here.
  	    $errorMessage = $e->getMessage();
  	    $errorCode = $e->getErrorCode();
  	    $errorData = $e->getExtraParams();
  	    return array(
  	      'error' => $errorMessage,
  	      'error_code' => $errorCode,
  	      'error_data' => $errorData,
  	    );
    }

    return $result;
  }
  
}